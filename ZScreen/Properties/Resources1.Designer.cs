//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ZSS.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ZSS.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to %t-%y%mo%d%h%mi%s.
        /// </summary>
        internal static string activeWindowDefault {
            get {
                return ResourceManager.GetString("activeWindowDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disabled.
        /// </summary>
        internal static string Disabled {
            get {
                return ResourceManager.GetString("Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SS-%y%mo%d%h%mi%s.
        /// </summary>
        internal static string entireScreenDefault {
            get {
                return ResourceManager.GetString("entireScreenDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No connection could be made because the target machine actively refused it.
        /// </summary>
        internal static string ftp1 {
            get {
                return ResourceManager.GetString("ftp1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No such host is known.
        /// </summary>
        internal static string ftp2 {
            get {
                return ResourceManager.GetString("ftp2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please login with USER and PASS.
        /// </summary>
        internal static string ftp3 {
            get {
                return ResourceManager.GetString("ftp3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Login incorrect.
        /// </summary>
        internal static string ftp4 {
            get {
                return ResourceManager.GetString("ftp4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timed out waiting on server to respond.
        /// </summary>
        internal static string ftp5 {
            get {
                return ResourceManager.GetString("ftp5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No such file or directory.
        /// </summary>
        internal static string ftp6 {
            get {
                return ResourceManager.GetString("ftp6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Updated..
        /// </summary>
        internal static string FTPnotUpdated {
            get {
                return ResourceManager.GetString("FTPnotUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        internal static string FTPsuccess {
            get {
                return ResourceManager.GetString("FTPsuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Testing....
        /// </summary>
        internal static string FTPtest {
            get {
                return ResourceManager.GetString("FTPtest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updated..
        /// </summary>
        internal static string FTPupdated {
            get {
                return ResourceManager.GetString("FTPupdated", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap info {
            get {
                object obj = ResourceManager.GetObject("info", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 		    GNU GENERAL PUBLIC LICENSE
        ///		       Version 2, June 1991
        ///
        /// Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
        /// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
        /// Everyone is permitted to copy and distribute verbatim copies
        /// of this license document, but changing it is not allowed.
        ///
        ///			    Preamble
        ///
        ///  The licenses for most software are designed to take away your
        ///freedom to share and change it.  By contrast, the GNU General Public
        ///License is intended to guarantee your freedom  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string license {
            get {
                return ResourceManager.GetString("license", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Account.
        /// </summary>
        internal static string NewAccount {
            get {
                return ResourceManager.GetString("NewAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        internal static bool PMvisible {
            get {
                object obj = ResourceManager.GetObject("PMvisible", resourceCulture);
                return ((bool)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify a Screenshot Name....
        /// </summary>
        internal static string ScreenshotName {
            get {
                return ResourceManager.GetString("ScreenshotName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Icons in tabs
        ///Screenshots tab should support double clicking screenshots from ImageShack
        ///Support for &quot;sets&quot; via right-click menu which allows creation of a new directory in your previously specified path automatically using two controls &quot;Start Set&quot; and &quot;End Set.&quot; Optionally run image editing software for each individual image. Optionally have the directory pop up in explorer after you have ended the set. Optionally upload entire set and create new directory. Optionally set clipboard to that URL. All opt [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TODO {
            get {
                return ResourceManager.GetString("TODO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version 1.3 - 20080601?
        ///
        ///1.3.03.0 Copy to Clipboard URL Mode is now in the Right Click tray menu
        ///1.3.02.2 Performance of Crop Shot has been increased
        ///1.3.02.1 Fixed bug in &quot;Switch After&quot; where Crop Shots would revert to full screen
        ///1.3.02.0 Redesigned Hotkeys tab adding support PrintScreen key and others
        ///1.3.01.0 Added support for multiple image software
        ///1.3.00.0 Support for uploading screenshots to ImageShack
        ///1.2.12.0 Added Thumbnail creation support for FTP with options to copy Thumbmail/Full Imag [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string VersionHistory {
            get {
                return ResourceManager.GetString("VersionHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Failed.
        /// </summary>
        internal static string VRDdeleteFailed {
            get {
                return ResourceManager.GetString("VRDdeleteFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetching file {0} from {1}....
        /// </summary>
        internal static string VRDfetchingFile {
            get {
                return ResourceManager.GetString("VRDfetchingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetching images from {0}.
        /// </summary>
        internal static string VRDfetchingImages {
            get {
                return ResourceManager.GetString("VRDfetchingImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready. Loaded {0} screenshots..
        /// </summary>
        internal static string VRDready {
            get {
                return ResourceManager.GetString("VRDready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Failed.
        /// </summary>
        internal static string VRDsaveFailed {
            get {
                return ResourceManager.GetString("VRDsaveFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Showing {0}..
        /// </summary>
        internal static string VRDshowing {
            get {
                return ResourceManager.GetString("VRDshowing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Viewing file: {0}.
        /// </summary>
        internal static string VRDviewingFile {
            get {
                return ResourceManager.GetString("VRDviewingFile", resourceCulture);
            }
        }
        
        internal static System.Drawing.Icon zss_busy {
            get {
                object obj = ResourceManager.GetObject("zss_busy", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon zss_new {
            get {
                object obj = ResourceManager.GetObject("zss_new", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon zss_uploaded {
            get {
                object obj = ResourceManager.GetObject("zss_uploaded", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
    }
}
