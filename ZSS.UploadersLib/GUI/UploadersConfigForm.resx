<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbDropboxLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>