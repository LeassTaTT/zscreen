<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbDropboxLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>