<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbDropboxLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOcAAAA8CAYAAACdDa3MAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAG1ZJREFUeF7t3f3P
        pkV1B/DFpP7gH9DfMCWpSesPNRpjaprQWgxBW2ykJW4x2JJI01BNKLa0khKrkVZs0dBQsqFQlVYoiLzo
        1gIKEYVSkBclIlIBUUoosPvs87YLCw9O78/17NkOszPX/b4su/cmV+5n73tez8x3vuecOTPXUSmlLbP4
        9/Tul9Jn7tm75bWvSVs++quv2/K6nzvqqFmUWyvje8+8lC6897kt7/yF127Z+kuv3fKao7bMra559WFR
        7kICQyUAnNM8L/0spS89vDedfP1qOvfWlfQXt6ym0762lv5n7aVBsdOVXcv/xR/sTe+6ajmd+R8raesN
        q+lPbl5LjyxtzKWuebR/Uebs58ThKtOpgPnDnRvpgzeupVO/spw+9e3VdOGdq2nbd1bT33xrNb33y8vp
        lsdfmBloLAJ/+1970nuu3gTm2TevdIvBn920kt5zzUq6+P7n0+4XBonmsCAsylwA6pWYAxOBc++AqIAB
        KM7++koHTM8Fd2wC9JJ7VtPFd692zHbZA89PDZhdz/+sY8iTr90Epgco/3JQ98cGAP3kN3el07+2kk75
        6mq6+8nZLQivxIAs6lwsBDEHxgbn955+MX1g+2o69fpN5vrENzefHJyAedm9q+nz92+qnZ+8c0/a6LTc
        8QX/2K6XOpBvHQDzjH9fTh8aPDk4ow1/d/smY1Ov1bf6/HzU6kn6sMgz/rgvZDbwBY0qBOxFrWTvAcg5
        31jpHsxVAyf2/Nx9q+nq7691IAZSZYxan3S3/fTF9FvXbALzgzcspz/6yq4mOAETc19012pn9wK0/OPU
        t0i7ANGhNAdGAie2NNl/d2BHYq2zblxJf37z6lBw/vN9a+mL31tLX35wLZ13x1rnKHpidTRG42T6jX/d
        lX7/muX0h9ctpdOuHw5O7BlqtU9qsAVlwaIL0B1KoBu1Lb3g5GD57D3PpeOvXO7AgTFDreSQGcacwHn5
        d1fTlQ+spa88tDtdfO/AbhyonX2MxvGjzuOuWE5bv7SU3j8A56nXjg7Oz9650rHnpQPmplZjbbbogkUX
        AB0VFIdKuiY4OVYAiXc0WOuPvzo5OKm323+4yaJsVlsipRAw3J/eurtbDE4e1Pu+Ly2nU65ZmgicvMYW
        h38bLAxAymH0V99aT0vPjadaHyoDtWjHkbe4HADOZ9Y30l/fsadjLuDAWtRKNt+04ARMAL3xv9c7G/Tv
        79qdMKWJ95OBuovh3vXFpXTSwK79vauWOoBOA85wSgHo9Q+td/VRz7c/cuDCsJj8R97kP9TH/GXgNGk5
        fE68YlcHzFArZwXOa3+w3oHkaw+vp1sfXU+fGGy/nP3N3R1YOH4A83eu3NU9swQnuxdAvzpYGLTBwuDh
        CT7UB2jRviN30ejA+dT6pjrJAZMDAzhnyZwBzmDP23683tmh1Nhf/9yODpwWhnmBE3MD6DceWU9f+O56
        x9T2YYO9F0A4coFwKI79FrYl1nrnAJgBjPdetatTKefFnMDpAZInll9I9z31Quf9fecXdu5nz3kwJ3Bi
        bgDF3Or/yGDbBXuPu81jMPfu3Zu2b9+err766qHPDTfckG655Zb0wAMPpKeffnqxIIyw53377benK664
        oirbnTt3HvZazxaMGcAMtTIH56yZE3vy3N71xO70v2svdiF3T6xspMcG8bFXPbie/mAQ3HDCv+zs7M5p
        HUJhc4Zam4MzVGvt4Cz6+mPj26ErKyvppJNOSmeffXY688wz01lnndV8/H7GGWek0047LZ1yyind39u2
        bUsPP/zwYT/JJmUl8vzwhz/8MpmSNZnfc889h73ctuzYvRkfezCYk8f2ph+tpx/teDEtP7fR7T96APOh
        Z19MP13eSN9/ZiN95j93d+Ck3s7CIVQDJ9YEUMCcNMQQOAHtoosuShdeeGHvI0080p5//vndpDv55JPT
        Oeec07HppJP4cM0HiOSUy9eCZoE7IsDZqWeDWFmb9WxOrAkYodbOgjntdWItKjRvMEAu7dnYD1COGeB8
        eMeAQQd/C1QQNC92lnoLoKNECAlCiH1OWykt5gRMgOW5nSY4Hzi3bt2aLrjggm4SjfsAqbzBBnfdddcC
        oJm6Sy4f//jHXyZfMrMgHjHgjJVXVI4tlFnZnMAhhA9bPrbrxW6PcecAlJ4WOH80OOnioep6rn3o+S6m
        FkCHhe+NAk7bOKKV7LVO660NcALleeedd8BTA2srnUl44oknpgVA/98pBZznnntut+iF3PxtQTziwAmk
        3316ozttIvggonPG3UoRoePBmMGW1Ges6XMUcFJ1f7xrMw9G/ce7d+8PhqgFvout7QNn2Ju2UOzjzuJ4
        GXBSSwGrfEyqsDFPP/307m+TzSSrpfe9PMp78sknFww6mIvkFewZMiOnIxacsbUiDhZAP3DdZmzrqEEI
        oVbyirItgYvjx+e44AyAPrm6CWpOG0fUMKj4XmpvnErpAydb1z4ntnTUbVY2WoATqNiN8eTAvPTSSztb
        1ORiK4UDqcwjrzSAzBadVRtfzeWQQ7BnyJaMLGBHJHPGYLJDHb0SlDBq+J5jY/9033rHlgD11NrG/s9J
        wfn4wEnEUUTFxbjYVKyu85wAOgycQMn+FIo4iUe2b3IHOGOFj08TCcg4Msr81FaTC5NKV8t7wgknHBGT
        b9jCQTa8tbmMyOyI8dYOE5AYWEECmLMV+O7YGGDaInFlCGCGzRggnQU4laUcnl5eXaquAHz1l8zpyBq1
        WhQSxnRrw7C+jvt7bKVY4W2VxOP/WLIGTnU8/vjjnX2Z58nzAjZmHbc9efqNjY1kH3ZYGXv27En2DKnS
        Hn2Sd1i+SX4ftU1RNlBaxErZ1sApkER/Z9F25RwsmfTJcaQjY5jQtSMOWMeRMaCgVjqZsu07m2wJkFgO
        280LnNiYmgygnEq8rWxNAA2b02Fvp1Jsk0waYDDK5AtwmkD5Y7U/9dRTu33MVjkCF0wyaWv5/ba0tLQ/
        PxBRkfMtmdhiyPdKAZ/TBMAxtHrKNijrpptu6pib51NdFguPv+XlRb7//vt7Qdpqk7wCCKLeBx98sLO1
        LVge/dX2Rx99tLd8i1zY6yEj8tLOUGv1XX3SkbnyLWy33XbbWEDNZaKcUibKJdeWTASZMF/K8fF/41Zb
        KMmlzOP/MWYjgZOQXdgVV4WESomtbn5kky2pm2Ejzh2c++xXam4EMbBx4zwnu5caWzv5MgroRk2zurra
        TRQTo3w4LfrACXgmgEGv5VduPsGt5Mcff3znDIkHsI477rguSkmbqczvfve7u9+V6dNg5/0xqU0+5fus
        1a1N8lKvsVcrGsf3UV/eJmVHvSJ8tFtbA5xRvu/7ZBQaSNlGdYq0uu6666pl65c0gDxKJFEpk9qYRPBI
        SybG4B3veEfXz3KM9NNiWGo2FhwLaC47ZeiXtCODMwp21pIdesm9e7otD6CM7Y+DDc7w/No37UA6CAV0
        yJoazus8KsgmTYc5Y5KbEPGE46dv4qnTxDc40g/LH0DIJ7i/TRZhgQH2HATKzsFpRQbmPE1eb9mG6EfL
        g6xN+l+2SXpsgU1MzPi9Vj4QlQtIjAdwmrhlPnlMbJ99ZcfiZxFtjTHQlIvHpDLRpnIRyiPC8jaoN29/
        LFgWlEg3Fjjz85ZC65wmETAQAH2lwAmYYmOF4mFNKvi8WZMAA5z5SulvA2TSDgPn5Zdf3g1Qudoqw8Si
        dsZAAQIg1piTCgcM6szLUkZMfExjVQacWn1lH+L/wbLsvnKC9zGntrfKLPugXTXva0RQleXoV6lF1OrS
        zz7wU6v9PiuZWCRj8av1MVRiKi4w1lgzl8PI4GRT2v909Qfv7S9fvKN73NfjN7YgkHrmrtbu25phdwKm
        wHn7qh+7dVcHToEP7M1Z7We2Vl3gNLgmS/n4fhg4gSoAUyvDAObgNCHzdAZXfqpj2I7579oQTimretiU
        eRrfKSNsrLIO30c9oT7nbar1P8r0W5Rnspq4tX6GaVDKGThrbY42KTsWN3+30h577LEH2IocR9TlAGfZ
        rpBJ3oea7EubXpktOQcrkiNZkGuUqZ7SCTgSOLGQyKH3X7vSAZNj6Fe27ezA+Yv/8Gx33IuayxnEoxpb
        H5xCs/bWWgQiBFA9jn5xTn30G0vdFZnAKTLJdoubDxwLm4enNpiTUMvH4Ayzp+TnzDBxpK+VY/DCkRA2
        Z55OPvmxmsEOp058agNGtRqbbLV6sDFb1WTlFOH0iLKirshnsci9odGmstyoX51U28hDlau1I/qR29jk
        A5zaVytfv7V1fX29W8A4V2r9853+2B/NwW9hbMleG7Gg9MNkovxcbdaHWrnSvf3tb+9sT3Ik22hvzBfO
        vLyNveC014l92HCCEYDSqZEcnEAaz2nbl7u7etiCsZ0ya3Dy0CpfGB5Qfmj70sBrvNSxZoAzv/nP3/O6
        /QBzmjxAUD4GeBhzBvPW8gcrxOQLIJhoeXoTwaM+3/s9vjMZgNMkjt/LvH7PJ0Q4uWptUh71uGTzcfoP
        JLW2+I4NnrcFOMv+qktamkDJtFhM32vtAQbyjjzU7pZMeJZrMqm1RX2lswdDtvro+/I3ZZTjoP4mOHln
        8yghrNkC51su2ZnedtnO5FPwvOtA2J+8qbMCJ8bcOYjNZVe6ilNAvmtTzrpxqWPNGjgj4F6EEDWXM6ul
        ok7yvcE2EQIM5ecwcAJesEaZNwYxtlMCnK264nvqrcliFXbSxSfVqVY+sNWOrFGvWvXkk6jVJm1XNjYr
        5YqR/CZNWQcAxWIUzNlqd6liS6+vtXZHeyJuuSX3SFcyuLKBORbBso4SzGxLfay1vdY+GhKGLmVVBWfc
        F+tkClDGgz1rzBng/LXP7UzHXr6UfGIrQetYLuJqJwnfY7/KD+yOksVpmS4IfsCaw8BJvRVX63gYNdf5
        1UkOVtfAG+A0ELVnGDgNSKg7tfwmS2wF+LRyt+ryPTYpBxn4WnksLDmbRB85qt761rdW8+WhhX1tytue
        y66vPeViQV2vtV3bag4kJoCFqNVf/dKWWcuE06ycH7SVvrHKf2sddjgAnOxL7AcE7oz1jAtOZ0Pj+fSd
        gxMpA2Dx9AZQRw18Z7MCtLA7EUpuSnCELGJ9RwUn5nTI21Ex7ZnFiRSDYWIDjMlSe4aB0wpOLW7lN8ED
        PAGEVtoWU7GtWnlM5FpEDVZq5bGY5HawNtbSAn7OgjF5sTn2aJWvvZEWOFvpWsEAHDKtPACj7FnLxBiW
        fQ0Wb7Ulvs898k3mjFjauHXPVolnUnCyU397cDbUJ5XStgt7EUgPAOe+w9ZOn9gzBWZqrMusqbAcTr/5
        hR3pvVcudVenUGm7cMIRmTPAKbzQ9SScSNOe5QxwmpxvetObqs8wcFJZ+/LnExw4+9Lm+2P5ILPDWu2r
        rfgxed/85jdX81kE4tRMX5uoqDVVzWLT6oc6YwNeO4Cz1nbpWuCkkrf6G9tB85RJLnuRSy05aqNFqnQC
        5fk75sRObkMQXACQcWfsLMDp4LZ9R7fFO0cJcLY/4sC1vzEqYDpw3V1ZMjhwLW4WU75l2yYwXaEyC3DG
        9STOmFo0pjmlEhPtjW98Yyofwh8GTuqVFbSW33c5swUQWnWFylauvtqgLbV8+VZNno+a1cqjvWGnapMJ
        Visbm9TAiWEsOqP0A5ha6VrgtK87rL/s5mFpSjmSCaDV2uP7mu1uEbMQtfoQTN7yd+w/v4nlgDKeWTFn
        d3B7sDcaLyPi0cVcFoT8n8BlgMWwAG2LBjCDNWcJTp5eDHr745vXc7JFJznfGeB8wxvekMrHgAwDJ/XK
        JKnl9x0VLQYuwNmqq+bEkNdk1ZZavrz8fIKw51rt8n14bAOctbKHgbPVj9zhBJy1dNrQOjImf6u/oSnY
        +52XTEqgtepSv/b0HU7oLvjCmEAZ15PMkjkDnDy93uMJnD4FLwgeiH/A8alvr3egDGC+7ZIdnXNp1swJ
        nGKCgZP3l9YwyXUlAc5jjjkmlY9JNQyc2M4gtfLnXsAAQi2tMmqe0QCnttTa1wfOVrtq4Ky1CTv2MWer
        HzVwlmm1rcWc8rf6G+C0YE0iE31vtTvfYsoBauuoVpdy9CNX4w+wOePOWrbmPJkzwJkD1N8u1+LVBcKf
        //QzHTDtm2LNeYGTSguYbvsTpMAJNskrCoGTWvf617/+gGcUcHIGSHf00UdX8+fRJwHOWl0GuXWLnwWi
        VofJ0VJrsZIya3WZoKVaW2t/Hzg50VoyE+2UO4S0s0zbB05Mpb9lnry/k8gkVP1aX1vy78ujfdrEwVZb
        xMhgv7cWSOL+oFBpZ2FzYk6v8HvfILLIA5C8pfEIVOfgCcacJzidXOGxpdLy2gLmNAHyAc5ywPx/GDhj
        G6U2SeU34OWGf20hiLQtcGLn1gLQcghRkdVfm4hsznBicGhxEI0DzmEyE1GUg7OUT/S3xZzsOJM+b5O/
        fRcOoVnKRNlszppjx9aW9tfkE9+Tcy0A4WXg9B9Hv6h4PKwBzGm9taHWsjsDnMGebk2gVjqC5kJrTDkv
        cAImVTZueheQMImdmasewyZan1rL3mwBwMCV3s4Wcw4Dp22RGpOow+Z3bStFEEMrjwUi394BztoC02JO
        Wyk1QEc/ctsZmFrgbNmc9mFb4AwzYVKZ1MZLu8kkP3trjpBhmb4FUvlr90YdsM/JMeMWPrfAA9YkQQj2
        OGMrxT1EvLU5e/KSAonXMVAvHeCOutiXYnZLtdZF05N6awHT4+D1LN+RMik4sSaVssWagFF68iYFJ4Zp
        LQLUy9peJHW6pQrndmofc/JS1sp2EoRqXNM2MFB+ALsPnDUHmLlLG6gBWn/Coz1LmdQWOQuQxbVsR9ie
        +fehZdU8t83wvWf3/KzzYnbvyRywnuigUSOEauDEnB7gcGcs9dIT4HSBNJYWWO/vGjjjHSqCEEaJEFKP
        4IOL7t68o5ZtOcv3okwCTt65cBK0VlKTt3TwTArOyFcDg3pqtxG0VEOTKz97qewac6rL97WLsvs0hlJb
        aIFTO2qOlNg3brFtROL0yaRlz5JJuWCFulwGEpRpQysQO8wsqI2F78uxGHoqhRfTUTHsJ3RvWPie6KIa
        OOXnoXXhlvek2G+sgdMCIGaWHWobRcwuNsWcAc64ZLovCAEwHR2jpvNIj/pG7daeU+37YeA0SCYCewTY
        TChHp1o2YKyiZQC4uicFp7xsn5pjpTbJqbnic1sTPGesFnPGZKyFpfUBv+x3C5y5/ZiPS5+tXKqeNXsw
        2l3e/dSSCRmVMsTKuWYQAMboyomxKG1i5Ux0ZEwsaryzM4Lf48hY51ndF/gurrYFTrfkAWbcH9sHzvwy
        MbYokJbgxJ61wHcOprjYa16nUWJCtMAZE9sgRYRI7Ku1HAQxWGy1GuNMA05qak21NcnZnXl8bc1Wiv6U
        nsU+5lQ2FTi/JgRYMcQowCfjGjgjr/7koX5MhRbgTPwS+KG617y61P3cBuyTCdDHeNHKyjYE4KOtrQVE
        unyb6gCH0DDWCBYV7ZODE7tF0HsOTvunbE7ABBhsJpQu3tHZYk7gdMu7qy/dU2uLR7QQoMbrGfartoN0
        cWRMqN8Fd2wetKY+7wt0GKodDOt36/dh4CTw8qnZmbnnLvdW5vVOA84IYGjZYgDKeRXB2q10JaP02Zyh
        BVhsqPFUv1CBS7UuFolyQ74PnPIoT4ic7RcLQUsjAeQ4n5kHdcSWTo3F4iaLYTLJz4mWKnuwZm6nY08s
        WmoyIa+cPceeuFjUNggwYszyREqAk2obwHSm0ivgxwUnR5Eb/tysB7CihGrgdDLF2U7301oIpgnJGweo
        w8DZAmLpEPB/E6h1lea0aq38EfBQs3diz630csaiEftxpUeyxZyRL+qKiVizsYNZaotSCU7lYKpcbYyg
        gJpGEhO+dsUKmTAzWh7YcWWCuUtzoKXe8xa36s3Zc2xw6hSvZ7zwiD2IOT2h1gKoaCNAcX2IqyqnBaeb
        9Wy5AKfg92BOqi3m/Pz9q5tnPQfheI68jQOySdNOCs6cTa32VL18873WnmmYM8qzKsekqIG09l0wVG3r
        YpjNGUwW/W0xcutkRglO5ZnYVNRRytZ2zN33eosIb6y1sfVdTSbGL2fuWBhqfaMh0FZq8lB2HMubGJzx
        /kyOG2pnnOP0ybtb3iM7DTiB3DWc7Emf3VUp+06muP2AR1ZgwSsFzlEYMl+JI16UWmaiDbu/tY85g3VH
        fc9nBH2Xk7tUv00Saah3rQ3/PubkeaXyRRhgrXy/6X8rQgY4c/UP0ExsYFN+qw/hqBHf2wprzBfAUWUS
        5ZYyiQD3ch4Y39bYtlg7xpNtOjU4vewIWKidsVcZr0hwC7w7faZlzgAne5LqqjxqLLB6S7VYWfYrcDr5
        crCY0z4eeyIunLIa1p64kc/epgnHTuJkyJ0lw9gbS+dXVeb1KL/v6FFZNiADDpsrHFX5JyZnF1GF+66V
        HCVCyCRTVn76xqT1HRn03dDO3gMEffWZq/1kpw95ucCqH0CMEceRb8gkjrNFWfGpHu2oySRuUczHRHtb
        kT/GIxxYtbkjr75PBE5BCnEgG4PZ/rDvGG//cgs858w8wElNdoEX+zU8vxEre/G9a11InitWhk32xe9p
        i8UFswAQoHCaUF95H0d5rUEfc+YRQsrCLsIRgWAc0AwbJ23lBdZ+Dhn9aTHxsLL8TibaWMpE+1syGeW1
        F6PUnadR5kTgVAjPrSgi6m286Mi7VNiFBwOcvL88v1iTWss7ezA8tOMK+XBOPwpzHs79n3ffJganhvHc
        ehOZUD0APVjMyfvrbiCgjBfhHixVdt4D8moqf1TmfDX16VBq61TgjI64F1Ykjv1PzDlPm5O9iTWF5FFh
        ZxHAfigNyKupLQvmnFzzHGWcZwJOFYmOELsq1A+D5q/km5VDiAOIzUl9tRh4DeAonVykmc8kWjDnfOQa
        83Vm4IwCXcwlllWQO6fQLPc5u2ihfW8Pm+Rw9AKks51MC+acrTzL+TlzcEYFbEBqJ5bzrkxBApNECHEu
        eajM4ntdLL0A2XwnxajyDeashSm2znOOWvYi3QSvABxHaA4zx/tK7E/a+hg1tjY8v2JseYVd/DVO3Yu0
        8wdwMGcEVeSfC3BOL/+5MWcOjmBRQOVhdSKl71SKPVMPUMrjbOkCbNMP9qxlmL/ZWuB8PIIFbMzPY/9v
        1n04lMs7KOAkACzKs+oYl60Q4XZxPSUHkrOaEW3k7Kfgeq8WPJSFt2jbobdgHE5jctDAGUL7yeBluxxG
        HxkcvBbZI+TO0bDurqFBjK5jZi4bcwP94SToRV8WQB53Dhx0cEYD2ZAcRhxFwCkckPPIi4vG7cQi/WLi
        H45z4BUDJ2EuDTyvPLBAunD4LAB2OAJsmj79H0qI1Ui+woqyAAAAAElFTkSuQmCC
</value>
  </data>
</root>